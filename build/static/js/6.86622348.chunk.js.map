{"version":3,"sources":["services/api.ts","util.ts","features/auth/Auth.tsx"],"names":["http","axios","create","baseURL","defaults","headers","post","interceptors","response","use","a","status","data","error","request","showAlert","message","Promise","reject","titleText","alertType","Swal","fire","position","timer","timerProgressBar","toast","showConfirmButton","showCancelButton","cancelButtonText","icon","showClass","popup","backdrop","hideClass","schema","Yup","shape","username","required","max","password","email","Auth","useForm","validationSchema","handleSubmit","register","errors","useState","isLogin","setIsLogin","loading","setLoading","dispatch","useAppDispatch","className","onSubmit","path","then","res","user","token","saveToken","setUser","setAuthState","catch","console","log","finally","ref","name","placeholder","type","disabled","onClick","style","cursor","opacity"],"mappings":"4KAGMA,EAAsBC,IAAMC,OAAO,CACvCC,QAAS,wBAGXH,EAAKI,SAASC,QAAQC,KAAK,gBAAkB,mBAE7CN,EAAKO,aAAaC,SAASC,IAA3B,uCACE,WAAOD,GAAP,SAAAE,EAAA,2DACMF,EAASG,QAAU,KAAOH,EAASG,OAAS,KADlD,yCAEWH,EAASI,MAFpB,2CADF,uDAME,SAACC,GAAuB,IAMiC,IAJrDL,EAE0DK,EAF1DL,SACAM,EAC0DD,EAD1DC,QAEF,GAAIN,GACF,GAAIA,EAASG,QAAU,KAAOH,EAASG,OAAS,IAE9C,OADAI,YAAS,UAACP,EAASI,YAAV,iBAAC,EAAeA,YAAhB,aAAC,EAAqBI,QAAS,SACjC,UAEJ,GAAIF,EAET,OADAC,YAAU,oCAAqC,SACxC,KAET,OAAOE,QAAQC,OAAOL,MAIXb,O,iCCjCf,wDAEae,EAAY,WAGb,IAFVI,EAES,uDAFG,sBACZC,EACS,uCACTC,IAAKC,KAAK,CACRH,YACAI,SAAU,UACVC,MAAO,IACPC,kBAAkB,EAClBC,OAAO,EACPC,mBAAmB,EACnBC,kBAAkB,EAClBC,iBAAkB,UAClBC,KAAMV,EACNW,UAAW,CACTC,MAAO,oBACPC,SAAU,qBAEZC,UAAW,CACTF,MAAO,GACPC,SAAU,Q,yHCZVE,EAASC,MAAaC,MAAM,CAChCC,SAAUF,MACPG,SAAS,sBACTC,IAAI,GAAI,gDACXC,SAAUL,MAAaG,SAAS,0CAChCG,MAAON,MAAaM,MAAM,qDAyFbC,UAtFE,WAAO,IAAD,EACsBC,YAAc,CACvDC,iBAAkBV,IADZW,EADa,EACbA,aAAcC,EADD,EACCA,SAAUC,EADX,EACWA,OADX,EAKSC,oBAAS,GALlB,mBAKdC,EALc,KAKLC,EALK,OAMSF,oBAAS,GANlB,mBAMdG,EANc,KAMLC,EANK,KAOfC,EAAWC,cAsBjB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,QAAd,cAEF,yBAAKA,UAAU,QACb,0BAAMC,SAAUX,GA1BH,SAAClC,GAClB,IAAM8C,EAAOR,EAAU,cAAgB,eACvClD,IACGM,KAAyBoD,EAAM9C,GAC/B+C,MAAK,SAACC,GACL,GAAIA,EAAK,CAAC,IACAC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdR,EAASS,YAAUD,IACnBR,EAASU,YAAQH,IACjBP,EAASW,aAAa,QAGzBC,OAAM,SAACrD,GACNsD,QAAQC,IAAIvD,MAEbwD,SAAQ,WACPhB,GAAW,UAWT,yBAAKG,UAAU,gBACb,2BAAOc,IAAKvB,EAAUwB,KAAK,WAAWC,YAAY,aACjDxB,GAAUA,EAAOV,UAChB,uBAAGkB,UAAU,SAASR,EAAOV,SAAStB,UAI1C,yBAAKwC,UAAU,gBACb,2BACEc,IAAKvB,EACLwB,KAAK,WACLE,KAAK,WACLD,YAAY,aAEbxB,GAAUA,EAAOP,UAChB,uBAAGe,UAAU,SAASR,EAAOP,SAASzB,WAIxCkC,GACA,yBAAKM,UAAU,gBACb,2BACEc,IAAKvB,EACLwB,KAAK,QACLC,YAAY,qBAEbxB,GAAUA,EAAON,OAChB,uBAAGc,UAAU,SAASR,EAAON,MAAM1B,UAKzC,yBAAKwC,UAAU,gBACb,4BAAQiB,KAAK,SAASC,SAAUtB,GAC7BF,EAAU,QAAU,mBAIzB,uBACEyB,QAAS,kBAAMxB,GAAYD,IAC3B0B,MAAO,CAAEC,OAAQ,UAAWC,QAAS,KAEpC5B,EAAU,yBAA2B","file":"static/js/6.86622348.chunk.js","sourcesContent":["import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\nimport { showAlert } from '../util';\n\nconst http: AxiosInstance = axios.create({\n  baseURL: 'https://diaries.app',\n});\n\nhttp.defaults.headers.post['Content-Type'] = 'application/json';\n\nhttp.interceptors.response.use(\n  async (response: AxiosResponse): Promise<any> => {\n    if (response.status >= 200 && response.status < 300) {\n      return response.data;\n    }\n  },\n  (error: AxiosError) => {\n    const {\n      response,\n      request,\n    }: { response?: AxiosResponse; request?: XMLHttpRequest } = error;\n    if (response) {\n      if (response.status >= 400 && response.status < 500) {\n        showAlert(response.data?.data?.message, 'error');\n        return null;\n      }\n    } else if (request) {\n      showAlert('Request failed. Please try again.', 'error');\n      return null;\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default http;\n","import Swal, { SweetAlertIcon } from 'sweetalert2';\n\nexport const showAlert = (\n  titleText = 'Something happened.',\n  alertType?: SweetAlertIcon\n): void => {\n  Swal.fire({\n    titleText,\n    position: 'top-end',\n    timer: 3000,\n    timerProgressBar: true,\n    toast: true,\n    showConfirmButton: false,\n    showCancelButton: true,\n    cancelButtonText: 'Dismiss',\n    icon: alertType,\n    showClass: {\n      popup: 'swal2-noanimation',\n      backdrop: 'swal2-noanimation',\n    },\n    hideClass: {\n      popup: '',\n      backdrop: '',\n    },\n  });\n};\n","import React, { FC, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { User } from \"../../interfaces/user.interface\";\nimport * as Yup from \"yup\";\nimport http from \"../../services/api\";\nimport { saveToken, setAuthState } from \"./authSlice\";\nimport { setUser } from \"./userSlice\";\nimport { AuthResponse } from \"../../services/mirage/routes/user\";\nimport { useAppDispatch } from \"../../store\";\n\nconst schema = Yup.object().shape({\n  username: Yup.string()\n    .required(\"What? No username?\")\n    .max(16, \"Username cannot be longer than 16 characters\"),\n  password: Yup.string().required('Without a password, \"None shall pass!\"'),\n  email: Yup.string().email(\"Please provide a valid email address (abc@xy.z)\"),\n});\n\nconst Auth: FC = () => {\n  const { handleSubmit, register, errors } = useForm<User>({\n    validationSchema: schema,\n  });\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const submitForm = (data: User) => {\n    const path = isLogin ? \"/auth/login\" : \"/auth/signup\";\n    http\n      .post<User, AuthResponse>(path, data)\n      .then((res) => {\n        if (res) {\n          const { user, token } = res;\n          dispatch(saveToken(token));\n          dispatch(setUser(user));\n          dispatch(setAuthState(true));\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"auth\">\n      <div className=\"logo-container\" >\n        <h1 className=\"logo\">Diary App</h1>\n      </div>\n      <div className=\"card\">\n        <form onSubmit={handleSubmit(submitForm)}>\n          <div className=\"inputWrapper\">\n            <input ref={register} name=\"username\" placeholder=\"Username\" />\n            {errors && errors.username && (\n              <p className=\"error\">{errors.username.message}</p>\n            )}\n          </div>\n\n          <div className=\"inputWrapper\">\n            <input\n              ref={register}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n            {errors && errors.password && (\n              <p className=\"error\">{errors.password.message}</p>\n            )}\n          </div>\n\n          {!isLogin && (\n            <div className=\"inputWrapper\">\n              <input\n                ref={register}\n                name=\"email\"\n                placeholder=\"Email (optional)\"\n              />\n              {errors && errors.email && (\n                <p className=\"error\">{errors.email.message}</p>\n              )}\n            </div>\n          )}\n\n          <div className=\"inputWrapper\">\n            <button type=\"submit\" disabled={loading}>\n              {isLogin ? \"Login\" : \"Create account\"}\n            </button>\n          </div>\n\n          <p\n            onClick={() => setIsLogin(!isLogin)}\n            style={{ cursor: \"pointer\", opacity: 0.7 }}\n          >\n            {isLogin ? \"No account? Create one\" : \"Already have an account?\"}\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n"],"sourceRoot":""}